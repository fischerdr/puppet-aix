#!/bin/sh
#
# puppet   Init script for running the puppet client daemon 
#
# description: Enables periodic system configuration checks through puppet. 
#

puppetd="/opt/puppet/bin/puppet"
pidfile="/var/run/puppet/agent.pid"
service="puppet"
LOGDEST="/var/log/puppet.log"

# define some generic commands
AWK=/usr/bin/awk
CAT=/usr/bin/cat
ECHO=/usr/bin/echo
GREP=/usr/bin/grep
KILL=/usr/bin/kill
MKDIR=/usr/bin/mkdir
PRINTF=/usr/bin/printf
PS=/usr/bin/ps
RM=/usr/bin/rm


# Check that the binary exists
if ! [ -f $puppetd ]; then
    $ECHO "$puppetd binary not found"
    exit 0
fi


start()
{
    if [ -r ${pidfile} ]; then
        pid=`$CAT ${pidfile}`
        if [ "`$PS -ef | $GREP ${service} | $AWK '{ print $2 }' | $GREP ${pid}`" = "${pid}" ] ; then
            $ECHO "The Puppet client daemon is already running with PID ${pid}"
            exit 1
        else
            $RM -f ${pidfile}
        fi
    fi
    $PRINTF "Starting Puppet... "
    $puppetd agent --daemonize --logdest $LOGDEST 
    RETVAL=$?
    $ECHO "done."
    return $RETVAL
}

# 'stop' is a command on AIX
ppstop() {
    $PRINTF "Shutting down Puppet... "
    RETVAL=1
    if [ -r ${pidfile} ]; then
        $KILL -KILL `$CAT ${pidfile}`
        RETVAL=$?
    fi
    if [ $RETVAL -eq 0 ];then
        $RM -f ${pidfile}
        $ECHO "done."
    else
        $ECHO "nothing to stop"
    fi
    return $RETVAL
}

restart() {
    ppstop
    start
}

status() {
    if [ -r ${pidfile} ]; then
        pid=`$CAT ${pidfile}`
        if [ "`$PS -ef | $GREP ${service} | $AWK '{ print $2 }' | $GREP ${pid}`" = "${pid}" ] ; then
            $ECHO "The Puppet client daemon is running with PID ${pid}"
        else
            $ECHO "Daemon dead but pidfile exists."
            $ECHO ${pidfile}
        fi
    else
        $ECHO "The Puppet daemon is not running."
        exit 1
    fi
}


case "$1" in
    start)
        start
        ;;
    stop)
        ppstop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $service {start|stop|restart|status}"
        RETVAL=2
        ;;
esac
exit $RETVAL
